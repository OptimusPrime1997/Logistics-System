/*

 * To change this license header, choose License Headers in Project Properties.

 * To change this template file, choose Tools | Templates

 * and open the template in the editor.

 */

package ui.warehousemanui;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

import main.MainFrame;
import VO.StockVO;
import bl.controllerfactorybl.ControllerFactoryImpl;
import bl.loginbl.Loginbl;
import blservice.stockblservice.StockBLService;
import ui.Img;
import ui.util.ButtonType;
import ui.util.MyButton;
import ui.util.MyLabel;
import util.enumData.City;
import util.enumData.ResultMessage;

import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.io.IOException;
import java.rmi.NotBoundException;
import java.util.ArrayList;



/**

 *

 * @author G

 */

public class StockShowPanel extends JFrame {



    /**

     * Creates new form StockShow

     * @throws IOException 

     * @throws NotBoundException 

     * @throws ClassNotFoundException 

     */

    public StockShowPanel() throws ClassNotFoundException, NotBoundException, IOException {
    	panel=new JPanel(){
			/* (non-Javadoc)
			 * @see javax.swing.JComponent#paintComponent(java.awt.Graphics)
			 */
			@Override
			protected void paintComponent(Graphics g) {
				g.drawImage(Img.getBackground_main(),0, 0, null);
			}
		};
    	
		panel.setLayout(null);
	
        initComponents();
        this.setContentPane(panel);
        
      
		addMouseListener(new MouseAdapter() {
			public void mousePressed(MouseEvent e) {
				mousePressedX = e.getX();
				mousePressedY = e.getY();
			}
		});
		addMouseMotionListener(new MouseMotionAdapter() {
			public void mouseDragged(MouseEvent e) {
				int x = (int) getLocation().getX();
				int y = (int) getLocation().getY();
				setLocation(x + e.getX() - mousePressedX, y + e.getY()
						- mousePressedY);
			}
		});
		
		this.setUndecorated(true);
		this.setBackground(new Color(0,0,0,0));        
        this.setVisible(true);

    }



    /**

     * This method is called from within the constructor to initialize the form.

     * WARNING: Do NOT modify this code. The content of this method is always

     * regenerated by the Form Editor.

     * @throws IOException 

     * @throws NotBoundException 

     * @throws ClassNotFoundException 

     */

    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents

    private void initComponents() {

    /**

    	* 设置窗体大小为不可变

    	*/

    this.setResizable(false);

    /**

    	* 设置窗体在中部出现

    	*/

    Toolkit tk = Toolkit.getDefaultToolkit();

    Dimension screensize = tk.getScreenSize();

    int screenh = screensize.height;

    int screenw = screensize.width;
    this.setSize(800, 500);

    this.setLocation(screenw/2-this.getWidth()/2, screenh/2-this.getHeight()/2);

    /**

    	* 关闭窗口

    	*/

    setDefaultCloseOperation(EXIT_ON_CLOSE);

    

        jScrollPane1 = new javax.swing.JScrollPane();

       

        userLabel = new MyLabel("当前账户："+Loginbl.getCurrentOptorName(), 590, 20, 300, 20);

        exit = new MyButton(750, 10, ButtonType.EXIT);

        //TODO 返回
        back = new MyButton(450, 400, ButtonType.BACK);

        //TODO 盘点
        show = new MyButton(580, 400, ButtonType.STOCK_SHOW_LITTLE);

        //TODO 导出
        export = new MyButton(670, 300, ButtonType.EXCEL_OUT);
        
        jTable1 = new JTable();
        jTable1.setBounds(50, 50, 600, 300);

        resultMessage = new MyLabel("反馈", 30, 470, 800, 20);

        

       


        jTable1.setModel(new javax.swing.table.DefaultTableModel(

            new Object [12][] 

                ,

            new String [] {

                "货物编号", "入库单号", "入库日期", "目的地", "区号", "位号"

            }

        ) {

/**

* 

*/

private static final long serialVersionUID = 1L;

	boolean[] canEdit = new boolean [] {
	
	                false, false,true, true,true,true
	
	            };



            public boolean isCellEditable(int rowIndex, int columnIndex) {

                return canEdit [columnIndex];

            }

        });

        
        jScrollPane1.setViewportView(jTable1);
        
        panel.add(exit);
        panel.add(back);
        panel.add(jTable1);
        panel.add(userLabel);
        panel.add(export);
        panel.add(jScrollPane1);
        panel.add(show);
        panel.add(resultMessage);
        
        
        
        





        exit.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {

                exitActionPerformed(evt);

            }

        });



 
        back.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {

                backActionPerformed(evt);

            }

        });




        show.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {

                try {

					showActionPerformed(evt);

			} catch (ClassNotFoundException | NotBoundException
			
			| IOException e) {
			
			e.printStackTrace();
			
			}

            }

        });




        export.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {

                exportActionPerformed(evt);

            }

        });

        

    }  

    private void setColumn() {
    	TableColumn colum1 = jTable1.getColumnModel().getColumn(0);
    	colum1.setPreferredWidth(100);
    	TableColumn colum2 = jTable1.getColumnModel().getColumn(1);
    	colum2.setPreferredWidth(150);
    	TableColumn colum3 = jTable1.getColumnModel().getColumn(2);
    	colum3.setPreferredWidth(100);
    	TableColumn colum4 = jTable1.getColumnModel().getColumn(3);
    	colum4.setPreferredWidth(50);
    	TableColumn colum5 = jTable1.getColumnModel().getColumn(4);
    	colum5.setPreferredWidth(70);
    	TableColumn colum6 = jTable1.getColumnModel().getColumn(5);
    	colum6.setPreferredWidth(20);
    }
    
    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

    MainFrame mf = new MainFrame();

    mf.setVisible(true);

    this.dispose();


    }//GEN-LAST:event_jButton3ActionPerformed



    

    StockBLService s = ControllerFactoryImpl.getInstance().getStockController();

    

    /**

     * 盘点货物

     * @param evt

     * @throws ClassNotFoundException

     * @throws NotBoundException

     * @throws IOException

     */

    private void showActionPerformed(java.awt.event.ActionEvent evt) throws ClassNotFoundException, NotBoundException, IOException {//GEN-FIRST:event_jButton5ActionPerformed

	    ArrayList<StockVO> list = s.showToday();   
	
	    int length = list.size();
	
	    if (length == 0) {
	
	    showFeedback(ResultMessage.SUCCESS, "现在仓库还没有货物~");

	}

	//TODO  看看存进去的时候有没有存好
    Object[][] showObjects = new Object[length][6];

    int count = 0;

    for (StockVO vo : list) {

	    String listNum = vo.listNum;	
	    String repNum = vo.inStockRepNum;	
	    String date = vo.inStockDate;
	    City des = vo.destination;	
	    int block = vo.block;	
	    int place = vo.place;
	
	    showObjects[count][0] = listNum;	
	    showObjects[count][1] = repNum;	
	    showObjects[count][2] = date;
	    showObjects[count][3] = des.toString(des);	
	    showObjects[count][4] = block;	
	    showObjects[count][5] = place;

	
	    ++count;
	


    }
  

    jTable1.setModel(new DefaultTableModel(

               showObjects

                    ,

                new String [] {

                    "货物编号", "入库单号", "入库日期", "目的地", "区号", "位号"

                }

            ) {

                /**
			
			* 
			
			*/
			
			private static final long serialVersionUID = 1L;
			
			boolean[] canEdit = new boolean [] {

                    false, false, false, false, false, false

                };



            public boolean isCellEditable(int rowIndex, int columnIndex) {

                    return canEdit [columnIndex];

            }

     });

    

    setColumn();
    

    

    }//GEN-LAST:event_jButton5ActionPerformed



    private void exportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

    String operation = "导出库存快照excel";

    try {

		ResultMessage rm = s.exportExcel();
	
		showFeedback(rm, operation);

	} catch (ClassNotFoundException e) {

		showFeedback(ResultMessage.FAILED, operation);

	} catch (NotBoundException e) {

		showFeedback(ResultMessage.FAILED, operation);

	} catch (IOException e) {

		showFeedback(ResultMessage.FAILED, operation);

	}

    

    

    

    }//GEN-LAST:event_jButton6ActionPerformed



    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        WarehousePanel w = new WarehousePanel();

        w.setVisible(true);

        this.dispose();

    }//GEN-LAST:event_jButton4ActionPerformed





    private void showFeedback(ResultMessage msg, String operation) {

    

    if (msg.equals(ResultMessage.SUCCESS)) {

    this.resultMessage.setForeground(Color.GREEN);

} else {

this.resultMessage.setForeground(Color.RED);

}

    

    this.resultMessage.setText(operation + ResultMessage.toFriendlyString(msg));

}

    
    public static void main(String[] args) {
		try {
			new StockShowPanel();
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (NotBoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables

    private MyButton exit;

    private MyButton back;

    private MyButton show;

    private MyButton export;

    private MyLabel userLabel;

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JTable jTable1;

    private MyLabel resultMessage;
    private int mousePressedX;
	private int mousePressedY;
    private JPanel panel;

    // End of variables declaration//GEN-END:variables

}

