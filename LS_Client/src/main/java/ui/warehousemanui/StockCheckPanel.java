/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.warehousemanui;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.rmi.RemoteException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.swing.*;

import main.MainFrame;
import bl.controllerfactorybl.ControllerFactoryImpl;
import bl.loginbl.Loginbl;
import blservice.stockblservice.StockBLService;
import ui.Img;
import ui.util.ButtonType;
import ui.util.MyButton;
import ui.util.MyLabel;
import util.enumData.ResultMessage;
/**
 *
 * @author G
 */
public class StockCheckPanel extends JFrame {

    /**
     * Creates new form StockCheck
     */
    public StockCheckPanel() {
    	panel = new JPanel() {
    		/* (non-Javadoc)
    		 * @see javax.swing.JComponent#paintComponent(java.awt.Graphics)
    		 */
    		@Override
    		protected void paintComponent(Graphics g) {
    			g.drawImage(Img.getBackground_main(), 0, 0, null);
    		}
    	};
    	panel.setLayout(null);
        initComponents();
        this.setContentPane(panel);
        
        
        addMouseListener(new MouseAdapter() {
			public void mousePressed(MouseEvent e) {
				mousePressedX = e.getX();
				mousePressedY = e.getY();
			}
		});
		addMouseMotionListener(new MouseMotionAdapter() {
			public void mouseDragged(MouseEvent e) {
				int x = (int) getLocation().getX();
				int y = (int) getLocation().getY();
				setLocation(x + e.getX() - mousePressedX, y + e.getY()
						- mousePressedY);
			}
		});
		
		this.setUndecorated(true);
		this.setBackground(new Color(0,0,0,0));        
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({ "unchecked", "rawtypes", "rawtypes" })
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
    	/**
    	 * 点叉关闭窗口
    	 */
    	this.setDefaultCloseOperation(EXIT_ON_CLOSE);

    	/**
    	 * 设置窗体大小
    	 */
    	this.setSize(800, 500);
    	/**
    	 * 设置窗体大小为不可变
    	 */
    	this.setResizable(false);
    	/**
    	 * 设置窗体在中部出现
    	 */
    	Toolkit tk = Toolkit.getDefaultToolkit();
    	Dimension screensize = tk.getScreenSize();
    	int screenh = screensize.height;
    	int screenw = screensize.width;
    	this.setLocation(screenw/2-this.getWidth()/2, screenh/2-this.getHeight()/2);
    

    	
        exit = new MyButton(750, 10, ButtonType.EXIT);
        confirm = new MyButton(620, 70, ButtonType.OK);
        usernamelabel = new MyLabel("当前账户："+username, 550, 30, 300, 20);

        startMLabel = new MyLabel("月", 270, 80, 20, 20);
        startM_Box = new JComboBox();
        startM_Box.setBounds(180, 80, 70, 20);
        startDLabel = new MyLabel("日", 270, 120, 20, 20);
        startD_Box = new JComboBox();
        startD_Box.setBounds(180, 120, 70, 20);
        startDateLabel = new MyLabel("起始日期", 100, 80, 80, 20);
        endDateLabel = new MyLabel("结束日期", 400, 80, 80, 20);
        endMLabel = new MyLabel("月", 570, 80, 20, 20);
        endD_Box = new JComboBox();
        endD_Box.setBounds(480, 120, 70, 20);
        endDLabel = new MyLabel("日", 570, 120, 20, 20);
        endM_Box = new JComboBox();
        endM_Box.setBounds(480, 80, 70, 20);
        inNumLabel = new MyLabel("入库数量", 100, 220, 80, 20);
        innum = new MyLabel("0", 200, 220, 80, 20);
        jLabel17 = new MyLabel("出库数量", 400, 220, 80, 20);
        outnum = new MyLabel("0", 500, 220, 80, 20);
        
        // TODO 返回
        back = new MyButton(380, 360, ButtonType.CANCEL);
        resultMessage = new MyLabel("反馈", 30, 470, 800, 20);
        
        panel.add(usernamelabel);
        panel.add(exit);
        panel.add(resultMessage);
        panel.add(startMLabel);
        panel.add(startDateLabel);
        panel.add(startM_Box);
        panel.add(startDLabel);
        panel.add(startD_Box);
        panel.add(endDateLabel);
        panel.add(endD_Box);
        panel.add(endM_Box);
        panel.add(endMLabel);
        panel.add(endDLabel);
        panel.add(confirm);
        panel.add(inNumLabel);
        panel.add(innum);
        panel.add(jLabel17);
        panel.add(outnum);
        panel.add(back);

        
        confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmActionPerformed(evt);
            }
        });

       
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        
        back.addActionListener(new ActionListener(){
        	public void actionPerformed(ActionEvent evt) {
        		backActionPerformed(evt);
        	}
        });
        



        startM_Box.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        startD_Box.setModel(new DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        endM_Box.setModel(new DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        endD_Box.setModel(new DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

       
    }

    
	StockBLService s = ControllerFactoryImpl.getInstance().getStockController();
 
    private void confirmActionPerformed(ActionEvent evt)  {                                         
        String startMonth = (String) startM_Box.getSelectedItem();
        String startDay = (String) startD_Box.getSelectedItem();
        String endMonth = (String) endM_Box.getSelectedItem();
        String endDay = (String) endD_Box.getSelectedItem();
        
        String result;
        String operation = "库存查看";
		try {
			result = s.checkStock(startMonth, startDay, endMonth, endDay);
				
	   	    
		        
		        if (result.equals("-1")) {
					showFeedback(ResultMessage.INVALID_DATE, operation);
				} else if (result.equals("-2")) {
					showFeedback(ResultMessage.IOFAILED, operation);
				} else if (result.equals("-3")) {
					showFeedback(ResultMessage.REMOTE_FAILED, operation);
				} else {
					 showResult(result);
					 showFeedback(ResultMessage.SUCCESS, operation);
				}
		} catch (RemoteException e) {
			showFeedback(ResultMessage.REMOTE_FAILED, operation);
		}
       
        
    
        
    } //GEN-LAST:event_jButton4ActionPerformed                                       

    /**
     * 从结果字符串中提取出入库出库数量并显示
     * @param result
     */
    private void showResult(String result) {
    	
  
    	
    	Pattern p = Pattern.compile("\\d+(\\.\\d+)?");
    	Matcher m = p.matcher(result);
    	m.find();
    	this.innum.setText(m.group());
    	m.find();
    	this.outnum.setText(m.group());
    	 	
    }//GEN-LAST:event_jButton4ActionPerformed
    
    
    private void exitActionPerformed(ActionEvent evt) {
    	MainFrame mf = new MainFrame();
    	mf.setVisible(true);
    	this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void backActionPerformed(ActionEvent evt) {
    	WarehousePanel w = new WarehousePanel();
		w.setVisible(true);
		this.dispose();
		
    }//GEN-LAST:event_jButton4ActionPerformed
    
    public void setUsername(String username) {
		this.username = username;
	}
    
    private void showFeedback(ResultMessage msg, String operation) {
    	
    	if (msg.equals(ResultMessage.SUCCESS)) {
    		this.resultMessage.setForeground(Color.GREEN);
		} else {
			this.resultMessage.setForeground(Color.RED);
		}
    	
    	this.resultMessage.setText(operation + ResultMessage.toFriendlyString(msg));
	}
    
    public static void main(String[] args) {
		new StockCheckPanel();
	}
    // Variables declaration - do not modify                     
    private MyButton back;
    private MyButton confirm;
    private MyButton exit;
    private javax.swing.JComboBox startM_Box;
    private javax.swing.JComboBox startD_Box;
    private javax.swing.JComboBox endD_Box;
    private javax.swing.JComboBox endM_Box;
    private MyLabel startMLabel;
    private MyLabel usernamelabel;
    private MyLabel endMLabel;
    private MyLabel jLabel11;
    private MyLabel endDLabel;
    private MyLabel inNumLabel;
    private MyLabel innum;
    private MyLabel jLabel17;
    private MyLabel outnum;
  
    private MyLabel startDLabel;
    private MyLabel startDateLabel;
    private MyLabel endDateLabel;
    private MyLabel resultMessage;
    private String username = Loginbl.getCurrentOptorName();
    private JPanel panel;
    private int mousePressedX;
   	private int mousePressedY;
    // End of variables declaration                   
}



