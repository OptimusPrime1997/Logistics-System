/**
 * 
 */
package bl.stockbl;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;

import javax.xml.bind.ValidationEvent;

import bl.receiptbl.InStockRepbl.InStockRepbl;
import ui.warehousemanui.CheckUtil;
import util.enumData.ResultMessage;
import VO.InStockRepVO;
import VO.OutStockRepVO;
import VO.StockVO;

/**
 * @author G
 *
 */
public class Stock {
	
	
	public InStockRepVO toWriteInStockRep() {
		//TODO
		return null;
	}
	
	public OutStockRepVO toWriteOutStockRep() {
		//TODO
		return null;
	}
	
	public int checkStock(String startMonth, String startDay,
			String endMonth, String endDay) {
		
		InStockRepbl rep = new InStockRepbl();
		ArrayList<InStockRepVO> reps = new ArrayList<InStockRepVO>();
		
		
		
		SimpleDateFormat dateFormat = new SimpleDateFormat("MM-dd");
        
        try{
            Date dateOne = dateFormat.parse(startMonth+"-"+startDay);
            Date dateTwo = dateFormat.parse(endMonth+"-"+endDay);
             
            Calendar calendar = Calendar.getInstance();
             
            System.out.println(checkDateValid(dateOne,dateTwo));
            if(!checkDateValid(dateOne,dateTwo)){
    			return -1;
    		}
            
            calendar.setTime(dateOne);
             
            while(calendar.getTime().compareTo(dateTwo)<=0){               
               
                 System.out.println(dateFormat.format(calendar.getTime()));
                calendar.add(Calendar.DAY_OF_MONTH, 1);               
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
         
		
		
		return reps.size();
	}

	public static void main(String[] args) {
		Stock s =new Stock();
		s.checkStock(2+"", 20+"", 2+"", 20+"");
	}
	
	public int checkOutStock(String startMonth, String startDay,
			String endMonth, String endDay) {
		// TODO Auto-generated method stub
		MockOutStockRep rep = new MockOutStockRep();
		ArrayList<OutStockRepVO> reps = new ArrayList<OutStockRepVO>();
		for(int i = 0;i < 10;++i) {
			reps.addAll(rep.getbyDate(startMonth+startDay));
		}
		return reps.size();
	}

	
	public int checkStockQuantity(String startMonth, String startDay,
			String endMonth, String endDay) {
		// TODO Auto-generated method stub
		MockInStockRep inrep = new MockInStockRep();
		ArrayList<InStockRepVO> inreps = new ArrayList<InStockRepVO>();
		for(int i = 0;i < 10;++i) {
			inreps.addAll(inrep.getByDate(startMonth+startDay));
		}
		MockOutStockRep outrep = new MockOutStockRep();
		ArrayList<OutStockRepVO> outreps = new ArrayList<OutStockRepVO>();
		for(int i = 0;i < 10;++i) {
			outreps.addAll(outrep.getbyDate(startDate));
		}
		MockStockNum stocknum = new MockStockNum();
		stocknum.initial(100);
		int initialStockNum = stocknum.getInitialStockNum();
		
		return initialStockNum+inreps.size()-outreps.size();
	}

	
	public int checkPresentStockQuantity() {
		// TODO Auto-generated method stub
		//现有库存数量=初始库存数量+遍历库存的数量
//		MockStockNum stocknum = new MockStockNum();
//		int initialStockNum = stocknum.getInitialStockNum();
		
		MockStockNum stocknum = new MockStockNum();
		stocknum.initial(100);
		MockStockList list = new MockStockList();
		
		StockListItem item1 = new StockListItem();
		StockListItem item2 = new StockListItem();
		
		list.addStockListItem(item1);
		list.addStockListItem(item2);
		
		int initialStockNum = stocknum.getInitialStockNum();
		System.out.println(" initial "+initialStockNum);
		int present = list.getPresentStockList().size();
		
		return initialStockNum+present;
	}

	
	public ArrayList<StockVO> show() {
		// TODO Auto-generated method stub
		return null;
	}

	
	
	/**
	 * 检查起始日期是否在结束日期之前
	 * @param dateOne
	 * @param dateTwo
	 * @return
	 */
	private boolean checkDateValid(Date dateOne,Date dateTwo){
		Calendar calendar = Calendar.getInstance();
        
        calendar.setTime(dateOne);
         
        if(calendar.getTime().compareTo(dateTwo)<=0){
        	return true;
        }
        
        return false;
	}
}
