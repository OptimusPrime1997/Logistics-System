/**
 * 
 */
package bl.stockbl;

import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.ArrayList;

import dataservice.stockdataservice.StockDataService;
import dataservice.stockdataservice.StockDivisionDataService;
import util.enumData.ResultMessage;
import PO.StockDivisionPO;
import VO.StockDivisionVO;
import bl.receiptbl.InStockRepbl.InStockRepbl;
import blservice.stockblservice.StockDivisionBLService;

/**
 * @author G
 *
 */
public class StockDivisionbl implements StockDivisionBLService{

	
	
	private StockDivisionDataService getStockDivisionDataService() throws MalformedURLException, RemoteException, NotBoundException {
		StockDivisionDataService sd = (StockDivisionDataService) Naming.lookup("stock");
		return sd;
	}
	
	public ResultMessage modifyDivision(int oldBlock, int oldPlace, int newBlock, int newPlace) {
		// TODO Auto-generated method stub
		return ResultMessage.SUCCESS;
	}

	 
	public ArrayList<StockDivisionVO> getBlock(String destination) {
		// TODO Auto-generated method stub
		
		return null;
	}
	
	public boolean isPlaceAvailable(int block, int place) throws MalformedURLException, RemoteException, NotBoundException {
		
		boolean available = true;
		StockDivisionDataService sd = getStockDivisionDataService();
		ArrayList<StockDivisionPO> list = sd.getStockDivision();
		ArrayList<StockDivisionVO> divisionlist = null;
		
		for(StockDivisionPO po :list) {
			divisionlist.add(new StockDivisionVO().poToVo(po));
		}
		
		return available;
	}

}
