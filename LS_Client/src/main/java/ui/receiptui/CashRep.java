/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ui.receiptui;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.IOException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.Vector;
import .JFrame;
import .JTable;
import .event.ChangeEvent;
import .event.ListSelectionEvent;
import .event.TableColumnModelEvent;
import .event.TableColumnModelListener;
import .table.DefaultTableModel;
import .table.TableColumn;

import VO.GoodsVO;
import VO.ReceiptVO.CashRepVO;
import VO.ReceiptVO.CashVO;
import bl.receiptbl.CashRepbl.CashRepController;
import blservice.receiptblservice.CashRepblService;
import util.enumData.ResultMessage;
import Exception.ExceptionPrint;
import Exception.NameNotFoundException;

/**
 *
 * @author apple
 */
public class CashRep extends .JPanel {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/**
     * Creates new form CashRep
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private .JLabel accountLabel;
    private .JComboBox jComboBox1;
    private .JButton cancelButton;
    private .JButton courierButton;
    private .JLabel courierNumLabel;
    private .JTextField courierNumText;
    private .JLabel dateLabel;
    private .JTextField dateText;
    private .JScrollPane jScrollPane1;
    private .JTable jTable;
    private .JLabel numLabel;
    private .JTextField numText;
    private .JLabel officeLabel;
    private .JTextField officeText;
    private .JButton okButton;
    private .JLabel sumLabel;
    private .JTextField sumText;
    private .JTextField resultMsgText;
    private CashRepblService control;
    private DefaultTableModel model;
    private Vector<String> columnIdentifiers;
    private Vector<Object> dataVector;
 // End of variables declaration//GEN-END:variables
    
    public CashRep() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

    	
        numLabel = new .JLabel();
        numText = new .JTextField();
        courierNumLabel = new .JLabel();
        courierNumText = new .JTextField();
        dateLabel = new .JLabel();
        dateText = new .JTextField();
        sumLabel = new .JLabel();
        sumText = new .JTextField();
        cancelButton = new .JButton();
        okButton = new .JButton();
        officeText = new .JTextField();
        officeLabel = new .JLabel();
        jScrollPane1 = new .JScrollPane();
        jTable = new .JTable();
        accountLabel = new .JLabel();
        jComboBox1 = new .JComboBox();
        courierButton = new .JButton();
        resultMsgText = new .JTextField();
        control = new CashRepController();
        model = new DefaultTableModel();
        columnIdentifiers = new Vector<String>();
        dataVector = new Vector<Object>();

        setBackground(new java.awt.Color(255, 255, 255));

        numLabel.setText("编号:");

        numText.setEditable(false);
        numText.setText(officeText.getText()+control.getDateInNum(dateText.getText())+"10000");

        courierNumLabel.setText("快递员编号:");

        dateLabel.setText("日期:");
        
        dateText.setText(control.getDate());

        sumLabel.setText("总和:");

        sumText.setText("0");

        cancelButton.setText("取消");
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelMouseClicked(evt);
            }
        });

        okButton.setText("确认");
        okButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                okMouseClicked(evt);
            }
        });

        officeText.setEditable(false);
        officeText.setText("025001");

        officeLabel.setText("营业厅:");

        jTable.setBorder(.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        
        columnIdentifiers.add("快递员名字");
        columnIdentifiers.add("快递员编号");
        columnIdentifiers.add("金额");
        columnIdentifiers.add("备注");
        columnIdentifiers.add("删除");
        
		try {
			dataVector = control.initTable(dateText.getText());
			model.setDataVector(dataVector, columnIdentifiers);
	        jTable.setModel(model);
		} catch (NotBoundException | ClassNotFoundException | IOException e) {
			e.printStackTrace();
			resultMsgText.setText(ExceptionPrint.print(e));
		}
        
        jTable.setColumnSelectionAllowed(true);
        jTable.setGridColor(new java.awt.Color(0, 0, 0));
        jTable.setOpaque(false);
        jTable.setRowHeight(20);
        jTable.setSelectionForeground(new java.awt.Color(0, 0, 20));
        jTable.setShowGrid(true);
        jScrollPane1.setViewportView(jTable);
        jTable.getColumnModel().getSelectionModel().setSelectionMode(.ListSelectionModel.SINGLE_SELECTION);
        
        accountLabel.setText("收款账号:");

        courierButton.setText("确定");
        courierButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                courierButtonMouseClicked(evt);
            }
        });
        
        setColumn();
        
        jComboBox1.setModel(new .DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        .GroupLayout layout = new .GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(.GroupLayout.Alignment.TRAILING)
                            .addComponent(courierNumLabel)
                            .addComponent(numLabel))
                        .addPreferredGap(.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(officeLabel)
                                .addPreferredGap(.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(officeText, .GroupLayout.PREFERRED_SIZE, .GroupLayout.DEFAULT_SIZE, .GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dateLabel)
                                .addPreferredGap(.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dateText, .GroupLayout.PREFERRED_SIZE, 101, .GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(.GroupLayout.Alignment.LEADING)
                                    .addComponent(numText, .GroupLayout.PREFERRED_SIZE, 183, .GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(courierNumText, .GroupLayout.PREFERRED_SIZE, 111, .GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(courierButton)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, .GroupLayout.PREFERRED_SIZE, 430, .GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(.GroupLayout.Alignment.TRAILING)
                                    .addComponent(accountLabel)
                                    .addComponent(sumLabel))
                                .addPreferredGap(.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(.GroupLayout.Alignment.LEADING)
                                    .addComponent(sumText, .GroupLayout.PREFERRED_SIZE, 61, .GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(cancelButton)
                                        .addGap(91, 91, 91)
                                        .addComponent(okButton))
                                    .addComponent(jComboBox1, .GroupLayout.PREFERRED_SIZE, 295, .GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 13, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(resultMsgText)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(.GroupLayout.Alignment.LEADING)
            .addGroup(.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(.GroupLayout.Alignment.BASELINE)
                            .addComponent(officeText, .GroupLayout.PREFERRED_SIZE, .GroupLayout.DEFAULT_SIZE, .GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateLabel)
                            .addComponent(officeLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(dateText, .GroupLayout.PREFERRED_SIZE, .GroupLayout.DEFAULT_SIZE, .GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(.GroupLayout.Alignment.BASELINE)
                    .addComponent(numLabel)
                    .addComponent(numText, .GroupLayout.PREFERRED_SIZE, .GroupLayout.DEFAULT_SIZE, .GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(.GroupLayout.Alignment.BASELINE)
                    .addComponent(courierNumText, .GroupLayout.PREFERRED_SIZE, .GroupLayout.DEFAULT_SIZE, .GroupLayout.PREFERRED_SIZE)
                    .addComponent(courierNumLabel)
                    .addComponent(courierButton))
                .addPreferredGap(.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, .GroupLayout.PREFERRED_SIZE, 325, .GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(.GroupLayout.Alignment.BASELINE)
                    .addComponent(sumText, .GroupLayout.PREFERRED_SIZE, .GroupLayout.DEFAULT_SIZE, .GroupLayout.PREFERRED_SIZE)
                    .addComponent(sumLabel))
                .addPreferredGap(.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(.GroupLayout.Alignment.BASELINE)
                    .addComponent(accountLabel)
                    .addComponent(jComboBox1, .GroupLayout.PREFERRED_SIZE, .GroupLayout.DEFAULT_SIZE, .GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addPreferredGap(.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(resultMsgText)));
            
            jTable.addMouseListener(new MouseListener() {
    			
    			@Override
    			public void mouseReleased(MouseEvent e) {
    				// TODO Auto-generated method stub
    				
    			}
    			
    			@Override
    			public void mousePressed(MouseEvent e) {
    				// TODO Auto-generated method stub
    				int row = jTable.getSelectedRow();
    				int col = jTable.getSelectedColumn();
    				if(col==4){
    					model.removeRow(row);
    					jTable.setModel(model);
    				}
    			}
    			
    			@Override
    			public void mouseExited(MouseEvent e) {
    				// TODO Auto-generated method stub
    				
    			}
    			
    			@Override
    			public void mouseEntered(MouseEvent e) {
    				// TODO Auto-generated method stub
    				
    			}
    			
    			@Override
    			public void mouseClicked(MouseEvent e) {
    				// TODO Auto-generated method stub
    				
    			}
            }
        );
    }// </editor-fold>//GEN-END:initComponents

    private void setColumn(){
    	TableColumn column1 = jTable.getColumnModel().getColumn(0);
        column1.setPreferredWidth(60);
        TableColumn column2 = jTable.getColumnModel().getColumn(1);
        column2.setPreferredWidth(80);
        TableColumn column3 = jTable.getColumnModel().getColumn(2);
        column3.setPreferredWidth(30);
        TableColumn column4 = jTable.getColumnModel().getColumn(3);
        column4.setPreferredWidth(60);
        TableColumn column5 = jTable.getColumnModel().getColumn(4);
        column5.setPreferredWidth(10);
    }
    
    private void courierButtonMouseClicked(java.awt.event.MouseEvent evt) {
//    	String courierNum = courierNumText.getText();
//    	String courierName = null;
//    	double money;
//    	try {
//			courierName = control.getCourierName(courierNum);
//		} catch (NameNotFoundException | RemoteException e) {
//			e.printStackTrace();
//			resultMsgText.setText(ExceptionPrint.print(e));
//		} 
//    	ArrayList<GoodsVO> arrGoods = control.getGoods(courierNum, dateText.getText());
//    	money = control.getMoneySum(arrGoods);
//    	Vector<Object> arr = new Vector<Object>();
//    	arr.add(courierName);
//    	arr.add(courierNum);
//    	arr.add(money);
//    	arr.add(null);
//    	dataVector.add(arr);
//    	model.setDataVector(dataVector, columnIdentifiers);
    	
    	String courierNum = courierNumText.getText();
    	ResultMessage resultMessage = control.checkCourierNum(courierNum);
    	String resultMsg = ResultMessage.toFriendlyString(resultMessage);
    	resultMsgText.setText(resultMsg);
    	if(resultMessage==ResultMessage.ADD_SUCCESS){
    		String courierName = "bismuth";
        	double money = 5.0;
        	Vector<Object> arr = new Vector<Object>();
        	arr.add(courierName);
        	arr.add(courierNum);
        	arr.add(money);
        	dataVector.add(arr);
        	model.setDataVector(dataVector, columnIdentifiers);
        	setColumn();
    	}
    	
    }
    
    private void okMouseClicked(java.awt.event.MouseEvent evt) {
		String num = numText.getText();
		String date = dateText.getText();
		double sum = Double.parseDouble(sumText.getText());
		ArrayList<CashVO> cashVOs = new ArrayList<CashVO>();
		for(int i = 0;i<dataVector.size();i++){
			CashVO vo = new CashVO((double)jTable.getValueAt(i, 2), (String)jTable.getValueAt(i, 1), (String)jTable.getValueAt(i, 0), (String)jTable.getValueAt(i, 3));
			cashVOs.add(vo);
		}
		CashRepVO cashRepVO = new CashRepVO(num, date, cashVOs, sum);
		try {
			control.submit(cashRepVO);
		} catch (NotBoundException | IOException e) {
			e.printStackTrace();
			resultMsgText.setText(ExceptionPrint.print(e));
		}
		resultMsgText.setText(ResultMessage.toFriendlyString(ResultMessage.SUBMIT_SUCCESS));
	}
    
    private void cancelMouseClicked(java.awt.event.MouseEvent evt) {

    }
    
    public static void main (String[] args){
    	JFrame myFrame = new JFrame();
    	myFrame.setSize(467,635);
    	myFrame.add(new CashRep());
    	myFrame.setVisible(true);
    }
}
