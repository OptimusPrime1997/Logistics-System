/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ui.receiptui.generalUI;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Vector;

import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

import Exception.ExceptionPrint;
import Exception.NameNotFoundException;
import Exception.NumNotFoundException;
import VO.Receipt.PayBonusVO;
import VO.Receipt.PayRepBonusRepVO;
import VO.Receipt.PayRepVO;
import bl.receiptbl.PayRepbl.PayRepBounsController;
import bl.receiptbl.PayRepbl.PayRepController;
import blservice.receiptblservice.PayRepBonusblService;
import blservice.receiptblservice.PayRepblService;
import ui.util.MyFrame;
import util.enumData.ResultMessage;

/**
 *
 * @author apple
 */
public class PayRepBonus extends javax.swing.JPanel {
	
	// Variables declaration - do not modify//GEN-BEGIN:variables
	private MyFrame myFrame;
	private javax.swing.JButton addButton;
	private javax.swing.JLabel balanceLabel;
	private javax.swing.JTextField balanceText;
	private javax.swing.JLabel bankAccountLabel;
	private javax.swing.JComboBox<String> bankAccountBox;
	private javax.swing.JButton cancelButton;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable jTable;
	private javax.swing.JLabel moneyLabel;
	private javax.swing.JTextField moneyText;
	private javax.swing.JButton okButton;
	private javax.swing.JLabel receiverNumLabel;
	private javax.swing.JTextField receiverNumText;
	private javax.swing.JTextField resultMsgText;
	private javax.swing.JLabel sumLabel;
	private javax.swing.JTextField sumText;
	private PayRepBonusblService control;
	private DefaultTableModel model;
	private Vector<String> columnIdentifiers;
	private Vector<Object> dataVector;
	private PayRepVO payRepVO;
	private PayRep payRep;
	private String bankAccount;
	// End of variables declaration//GEN-END:variables

	/**
	 * Creates new form 奖金
	 */
	public PayRepBonus(PayRep oriPayRep, PayRepVO oriPayRepVO, String oriBank) {
		payRep = oriPayRep;
		payRepVO = oriPayRepVO;
		bankAccount = oriBank;
		initComponents();
		myFrame = new MyFrame(446, 563, this);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		receiverNumLabel = new javax.swing.JLabel();
		receiverNumText = new javax.swing.JTextField();
		moneyLabel = new javax.swing.JLabel();
		moneyText = new javax.swing.JTextField();
		cancelButton = new javax.swing.JButton();
		okButton = new javax.swing.JButton();
		addButton = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTable = new javax.swing.JTable();
		sumLabel = new javax.swing.JLabel();
		sumText = new javax.swing.JTextField();
		balanceLabel = new javax.swing.JLabel();
		balanceText = new javax.swing.JTextField();
		bankAccountLabel = new javax.swing.JLabel();
		bankAccountBox = new javax.swing.JComboBox<String>();
		resultMsgText = new javax.swing.JTextField();
		control = new PayRepBounsController();
		columnIdentifiers = new Vector<String>();
		dataVector = new Vector<Object>();
		model = new DefaultTableModel(dataVector, columnIdentifiers){
			@Override
			public boolean isCellEditable(int row, int column){
				if(column==3)
					return true;
				else 
					return false;
			}
		};

		setBackground(new java.awt.Color(255, 255, 255));

		receiverNumLabel.setText("收款人编号:");

		moneyLabel.setText("金额:");

		cancelButton.setText("取消");
		cancelButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cancelButtonActionPerformed(evt);
			}
		});

		okButton.setText("确认");
		okButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				okButtonActionPerformed(evt);
			}
		});

		addButton.setText("添加");
		addButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				addButtonActionPerformed(evt);
			}
		});
		
		columnIdentifiers.add("名字");
		columnIdentifiers.add("编号");
		columnIdentifiers.add("金额");
		columnIdentifiers.add("备注");
		columnIdentifiers.add("删除");
		dataVector = control.initBonusTable(payRepVO);
		model.setDataVector(dataVector, columnIdentifiers);
		jTable.setModel(model);
		jTable.setGridColor(new java.awt.Color(0, 0, 0));
		jScrollPane1.setViewportView(jTable);

		sumLabel.setText("总计:");

		sumText.setEditable(false);

		balanceLabel.setText("账户余额:");

		balanceText.setEditable(false);

		bankAccountLabel.setText("付款账户:");

		resultMsgText.setEditable(false);

		try {
			bankAccountBox = new JComboBox<String>(control.showBankAccount());
		} catch (ClassNotFoundException | IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			resultMsgText.setText(ExceptionPrint.print(e));
		}
		if (bankAccount != null) {
			bankAccountBox.setEnabled(false);
			for (int i = 0; i < bankAccountBox.getItemCount(); i++) {
				if (bankAccountBox.getItemAt(i).equals(bankAccount)) {
					bankAccountBox.setSelectedIndex(i);
					double balance = 0;
					try {
						balance = control.showBankBalance(bankAccount);
					} catch (ClassNotFoundException | NameNotFoundException | IOException | NumNotFoundException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
						resultMsgText.setText(ExceptionPrint.print(e));
					}
					balanceText.setText(balance+"");
					break;
				}
			}
		}
		bankAccountBox.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				bankAccountBoxActionPerformed(evt);
			}
		});

		setColumn();

		jTable.addMouseListener(new MouseListener() {

			@Override
			public void mouseReleased(MouseEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void mousePressed(MouseEvent e) {
				// TODO Auto-generated method stub
				int row = jTable.getSelectedRow();
				int col = jTable.getSelectedColumn();
				if (col == 4) {
					model.removeRow(row);
					jTable.setModel(model);
					sumText.setText(calSum());
				}
			}

			@Override
			public void mouseExited(MouseEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void mouseEntered(MouseEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void mouseClicked(MouseEvent e) {
				// TODO Auto-generated method stub

			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(resultMsgText)
				.addGroup(layout.createSequentialGroup().addGap(19, 19, 19)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(layout.createSequentialGroup()
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(moneyLabel).addComponent(receiverNumLabel))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(receiverNumText, javax.swing.GroupLayout.PREFERRED_SIZE, 97,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGroup(layout.createSequentialGroup()
												.addComponent(moneyText, javax.swing.GroupLayout.PREFERRED_SIZE, 66,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(33, 33, 33).addComponent(addButton))))
						.addGroup(layout.createSequentialGroup().addGap(49, 49, 49).addComponent(cancelButton)
								.addGap(58, 58, 58).addComponent(okButton))
						.addGroup(layout.createSequentialGroup().addGap(12, 12, 12)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
										.addComponent(bankAccountLabel).addComponent(balanceLabel)
										.addComponent(sumLabel))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(bankAccountBox, javax.swing.GroupLayout.PREFERRED_SIZE, 246,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(sumText, javax.swing.GroupLayout.PREFERRED_SIZE, 67,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(balanceText, javax.swing.GroupLayout.PREFERRED_SIZE, 66,
												javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 412,
								javax.swing.GroupLayout.PREFERRED_SIZE))
						.addContainerGap(15, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(19, 19, 19)
						.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266,
								javax.swing.GroupLayout.PREFERRED_SIZE)
				.addGap(18, 18, 18)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(receiverNumLabel).addComponent(receiverNumText,
								javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.PREFERRED_SIZE))
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
				.addGroup(
						layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(moneyLabel)
								.addComponent(moneyText, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(addButton))
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(sumLabel)
						.addComponent(sumText, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(bankAccountLabel).addComponent(bankAccountBox,
								javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.PREFERRED_SIZE))
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(balanceLabel).addComponent(balanceText, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
				.addGap(18, 18, 18)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(okButton)
						.addComponent(cancelButton))
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
				.addComponent(resultMsgText, javax.swing.GroupLayout.PREFERRED_SIZE,
						javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));
	}// </editor-fold>//GEN-END:initComponents

	private void setColumn() {
		TableColumn column1 = jTable.getColumnModel().getColumn(0);
		column1.setPreferredWidth(75);
		TableColumn column2 = jTable.getColumnModel().getColumn(1);
		column2.setPreferredWidth(115);
		TableColumn column3 = jTable.getColumnModel().getColumn(2);
		column3.setPreferredWidth(60);
		TableColumn column4 = jTable.getColumnModel().getColumn(3);
		column4.setPreferredWidth(150);
		TableColumn column5 = jTable.getColumnModel().getColumn(4);
		column5.setPreferredWidth(50);
	}

	private String calSum() {
		double sum = 0;
		for (int i = 0; i < dataVector.size(); i++) {
			sum += Double.parseDouble((String) jTable.getValueAt(i, 2));
		}
		return sum + "";
	}

	private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {
		if(receiverNumText.getText().equals("")){
			resultMsgText.setText("请填写收款人编号");
			return;
		}
		if(moneyText.getText().equals("")){
			resultMsgText.setText("请填写奖金金额");
			return;
		}
		String getterNum = receiverNumText.getText();
		double money = Double.parseDouble(moneyText.getText());
		String resultMsg = control.checkNum(getterNum, 11, "人员编号");
		ResultMessage resultMessage = control.checkMoney(money);
		if (!resultMsg.equals("添加成功")) {
			resultMsgText.setText(resultMsg);
			return;
		}
		if (resultMessage != ResultMessage.ADD_SUCCESS) {
			resultMsgText.setText(ResultMessage.toFriendlyString(resultMessage));
			return;
		}
		resultMsgText.setText("添加成功");
		Vector<String> arr = new Vector<String>();
		String getterName = null;
		try {
			getterName = control.getReceiverName(getterNum);
		} catch (ClassNotFoundException | NameNotFoundException | NumNotFoundException | IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			resultMsgText.setText(ExceptionPrint.print(e));
			return;
		}
		arr.add(getterName);
		arr.add(getterNum);
		arr.add(money + "");
		dataVector.add(arr);
		model.setDataVector(dataVector, columnIdentifiers);
		setColumn();
		sumText.setText(calSum());
		receiverNumText.setText("");
		moneyText.setText("");
	}

	private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {
		myFrame.dispose();
	}

	private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {
		double sum = Double.parseDouble(sumText.getText());
		double balance = Double.parseDouble(balanceText.getText());
		if(sum>balance){
			resultMsgText.setText("付款金额超过账户余额，请更换账户");
			return;
		}
		String bankAccount = (String) bankAccountBox.getSelectedItem();
		try {
			control.minusMoneyInBankAccount(bankAccount, sum);
		} catch (ClassNotFoundException | NumNotFoundException | IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			resultMsgText.setText(ExceptionPrint.print(e));
			return;
		}
		ArrayList<PayBonusVO> payBonusVOs = new ArrayList<PayBonusVO>();
		for (int i = 0; i < dataVector.size(); i++) {
			PayBonusVO payBonusVO = new PayBonusVO((String) jTable.getValueAt(i, 0), 
					(String) jTable.getValueAt(i, 1),
					Double.parseDouble((String) jTable.getValueAt(i, 2)),
					(String) jTable.getValueAt(i, 3));
			payBonusVOs.add(payBonusVO);
		}
		PayRepBonusRepVO payRepBonusRepVO = new PayRepBonusRepVO(bankAccount, sum, payBonusVOs);
		control.submitBonus(payRepVO, payRepBonusRepVO);
		payRep.deleteRow("奖金");
		Vector<String> arr = new Vector<String>();
		arr.add("奖金");
		arr.add(sum + "");
		arr.add(bankAccount);
		payRep.createRow(arr);
		myFrame.dispose();
	}
	
	private void bankAccountBoxActionPerformed(java.awt.event.ActionEvent evt){
		String bankAccount = (String)bankAccountBox.getSelectedItem();
		double balance = 0;
		try {
			balance = control.showBankBalance(bankAccount);
		} catch (ClassNotFoundException | NameNotFoundException | IOException | NumNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			resultMsgText.setText(ExceptionPrint.print(e));
		}
		balanceText.setText(balance+"");
	}

}
